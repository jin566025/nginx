
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
	ssi on;
		ssi_silent_errors on;
		ssi_types text/shtml;

    include       mime.types;
    default_type  application/octet-stream;
	client_max_body_size 50m;
    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        #listen       80;
        #server_name  localhost;
		
		listen       80;
        #server_name yui0574.tunnel.qydev.com
        server_name  127.0.0.1;
        #server_name  localhost;
        #server_name  www.ssyujay.com;
        charset utf-8;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;
		
		# 静态页面目录
               
		#root        D:\workset\zhhy\zhhy-parent\yui-ui;
		#root        D:\workset\machine-parent\yui-ui;
		#root        D:\workset\zsgjj-parent\yui-ui;
		root        D:\workset\yui-ui;
		#root        D:\workset\boiler-parent\yui-ui;
		# 默认首页
		index      admin/view/index.html;
    
        location / {
            #root   html;
            #index  index.html index.htm;
			#add_header 'Access-Control-Allow-Origin' '*';

			
			# 用户浏览器端的缓存设置
			location ~ .*\.(jpg|jpeg|gif|png|swf|htm|html|json|xml|svg|woff|ttf|eot|map|ico)$ {
				expires 10d;
			}
			location ~ .*\.(js|css)?$ {
				expires 1h;
			}
			location ~* \.(css|js|jpg|jpeg|gif|png|swf|htm|html|json|xml|svg|woff|ttf|eot|map|ico)$ {
				if (-f $request_filename) {
						break;
				}
			}
			location ^~/sys {
		    	proxy_pass       http://118.31.0.246:8082;
			}
			#location ^~/mt {
		    #	proxy_pass       http://118.31.0.246:8098;
			#}
			location ^~/general {
		    	proxy_pass       http://118.31.0.246:8084;
			}
			location ^~/prod {
		    	proxy_pass       http://118.31.0.246:8086;
			}
			location ^~/weixin {
		    	proxy_pass       http://118.31.0.246:8088;
			}
			location ^~/sched {
		    	proxy_pass       http://118.31.0.246:8090;
			}
			location ^~/df {
		    	proxy_pass       http://118.31.0.246:8094;
			}
			
			location ^~/machine/sys {
		    	proxy_pass       http://121.196.201.152:8082;
			}
			location ^~/machine/general {
		    	proxy_pass       http://121.196.201.152:8084;
			}
			#location ^~/machine/jl {
		    #	proxy_pass       http://121.196.201.152:8100;
				
			#}
			
		
			location ^~/jj {
		    	proxy_pass       http://118.31.0.246:8100;
			}
			
			location ^~/boiler/sys {
		    	proxy_pass       http://118.31.0.246:8082;
			}
			location ^~/boiler/general {
		    	proxy_pass       http://118.31.0.246:8084;
			}
			location ^~/boiler/sn {
		    	proxy_pass       http://118.31.0.246:8100;
			}
			
			
			
			# 动态页面,交给tomcat处理
			if ( !-e $request_filename) {

			}
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
